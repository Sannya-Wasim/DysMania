/*
//FORM 1 - MENU
using System;
using System.Media;
using System.Windows.Forms;

namespace PictureFlip
{
    public partial class Main : Form
    {
private SoundPlayer Player4 =new SoundPlayer(Properties.Resources.cardFlipGame);

        public Main()
        {
            InitializeComponent();
            this.WindowState = FormWindowState.Maximized;
            this.Player4.Play();
 textBox1.Text = "This memory game is developed for helping children
 with ADHD and LEARNING DISABILITY." + "It works by enhancing memory
 retention capabilities as well as the conception of object
 permenance.";
        }

        private void Easy_Click(object sender, EventArgs e)
        {
            Monsters f3 = new Monsters();
            f3.Show();
            this.Hide();
        }
        private void Medium_Click(object sender, EventArgs e)
        {
            Cars f2 = new Cars();
            f2.Show();
            this.Hide();
        }
       private void Hard_Click(object sender, EventArgs e)
        {
            superHero f1 = new superHero();
            f1.Show();
            this.Hide();
        }
        private void Main_FormClosed(object sender, FormClosedEventArgs e)
        {
            Application.Exit();
        }
    }
}
//FORM 2 - EASY / MEDIUM LEVELS
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Media;
using System.Windows.Forms;


namespace PictureFlip
{
    public partial class Monsters : Form
    {
      bool allowClick = false;
      PictureBox firstGuess;
      Random rnd = new Random();
      Timer clickTimer = new Timer();
      int time = 60;
      Timer timer = new Timer { Interval = 1000 };
      private SoundPlayer Player3 =new SoundPlayer(Properties.Resources.cardFlipGame);

        public Monsters()
        {
            InitializeComponent();
            this.WindowState = FormWindowState.Maximized;
            this.Player3.Play();
        }

        private PictureBox[] pictureBoxes
        {
            get { return Controls.OfType<PictureBox>().ToArray(); }
        }

        private static IEnumerable<Image> images
        {
            get
            {   return new Image[]
                {
                    Properties.Resources.img31,
                    Properties.Resources.img32,
                    Properties.Resources.img33,
                    Properties.Resources.img34
                };
            }
        }
  	  private void startGameTimer()
        {
            timer.Start();
            timer.Tick += delegate
            {
                time--;
                if (time < 0)
                {
                    timer.Stop();
                    MessageBox.Show("SORRY YOU HAVE LOST!!! PLEASE TRY AGAIN");
                    ResetImages();
                }
                var ssTime = TimeSpan.FromSeconds(time);
                label1.Text = "00: " + time.ToString();
            };
        }  
private void ResetImages()
        {
            foreach (var pic in pictureBoxes)
            {
                pic.Tag = null;
                pic.Visible = true;
            }
            HideImages();
            setRandomImages();
            time = 60;
            timer.Start();
        }

        private void HideImages()
        {
            foreach (var pic in pictureBoxes)
            {
                pic.Image = Properties.Resources.bgMonster1;
            }
        }
 	 private PictureBox getFreeSlot()
        {
            int num;
            do
            {
                num = rnd.Next(0, pictureBoxes.Count());
            }
            while (pictureBoxes[num].Tag != null);
            return pictureBoxes[num];
        }

        private void setRandomImages()
        {
            foreach (var image in images)
            {
                getFreeSlot().Tag = image;
                getFreeSlot().Tag = image;
            }
        }
        private void CLICKTIMER_TICK(object sender, EventArgs e)
        {
            HideImages();
            allowClick = true;
            clickTimer.Stop();
        }
        private void clickPicture(object sender, EventArgs e)
        {
            if (!allowClick) return;
            var pic = (PictureBox)sender;
            if (firstGuess == null)
            {
                firstGuess = pic;
                pic.Image = (Image)pic.Tag;
                return;
            }
            pic.Image = (Image)pic.Tag;
            if (pic.Image == firstGuess.Image && pic != firstGuess)
            {
                pic.Visible = firstGuess.Visible = false;
                {
                    firstGuess = pic;
                }
                HideImages();
            }
            else
            {
                allowClick = false;
                clickTimer.Start();
            }
            firstGuess = null;
            if (pictureBoxes.Any(p => p.Visible)) return;
            MessageBox.Show("YAYYYY YOU HAVE WON!!!!!");
            ResetImages();
        }
        private void button1_Click(object sender, EventArgs e)
        {

            allowClick = true;
            setRandomImages();
            HideImages();
            startGameTimer();
            clickTimer.Interval = 1000;
            clickTimer.Tick += CLICKTIMER_TICK;
            button1.Enabled = false;
        }
        private void button2_Click(object sender, EventArgs e)
        {
            Main f4 = new Main();
            f4.Show();
            this.Hide();
        }
        private void button3_Click(object sender, EventArgs e)
        {
            Cars f2 = new Cars();
            f2.Show();
            this.Hide();
        }

        private void Monsters_FormClosed(object sender, FormClosedEventArgs e)
        {
            Application.Exit();
        }
    }
}

//FORM 4 - HARD  LEVEL
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;
using System.Media;

namespace PictureFlip
{	
    public partial class superHero : Form
    {
        bool allowClick = false;
        PictureBox firstGuess;
        Random rnd = new Random();
        Timer clickTimer = new Timer();
        int time = 45;
        Timer timer = new Timer { Interval = 1000 };
        SoundPlayer Player = new SoundPlayer(Properties.Resources.cardFlipGame);

        public superHero()
        {
            InitializeComponent();
            this.WindowState = FormWindowState.Maximized;
            this.Player.PlayLooping();
        }
        private PictureBox[] pictureBoxes
        {
            get { return Controls.OfType<PictureBox>().ToArray(); }
        }

        private static IEnumerable<Image> images
        {
            get
            {
                return new Image[]
                {
                    Properties.Resources.img1,
                    Properties.Resources.img2,
                    Properties.Resources.img3,
                    Properties.Resources.img4,
                    Properties.Resources.img5,
                    Properties.Resources.img6,
                    Properties.Resources.img7,
                    Properties.Resources.img8
                };
            }
        }
        private void startGameTimer()
        {
            timer.Start();
            timer.Tick += delegate
            {
                time--;
                if (time < 0)
                {
                    timer.Stop();
                    MessageBox.Show("SORRY YOU HAVE LOST!!! PLEASE TRY AGAIN");
                    ResetImages();
                }
                var ssTime = TimeSpan.FromSeconds(time);
                label1.Text = "00: " + time.ToString();
            };
        }
        private void ResetImages()
        {
            foreach (var pic in pictureBoxes)
            {
                pic.Tag = null;
                pic.Visible = true;
            }
            HideImages();
            setRandomImages();
            time = 60;
            timer.Start();
        }

        private void HideImages()
        {
            foreach (var pic in pictureBoxes)
            {
                pic.Image = Properties.Resources.bgSuoerhero;
            }
        }
        private PictureBox getFreeSlot()
        {
            int num;
            do
            {
                num = rnd.Next(0, pictureBoxes.Count());
            }
            while (pictureBoxes[num].Tag != null);
            return pictureBoxes[num];
        }

        private void setRandomImages()
        {
            foreach (var image in images)
            {
                getFreeSlot().Tag = image;
                getFreeSlot().Tag = image;
            }
        }
        private void CLICKTIMER_TICK(object sender, EventArgs e)
        {
            HideImages();
            allowClick = true;
            clickTimer.Stop();
        }
        private void clickImage(object sender, EventArgs e)
        {
            if (!allowClick) return;
            var pic = (PictureBox)sender;
            if (firstGuess == null)
            {
                firstGuess = pic;
                pic.Image = (Image)pic.Tag;
                return;
            }
            pic.Image = (Image)pic.Tag;
            if (pic.Image == firstGuess.Image && pic != firstGuess)
            {
                pic.Visible = firstGuess.Visible = false;
                {
                    firstGuess = pic;
                }
                HideImages();
            }
            else
            {
                allowClick = false;
                clickTimer.Start();
            }
            firstGuess = null;
            if (pictureBoxes.Any(p => p.Visible)) return;
            MessageBox.Show("YAYYYY YOU HAVE WON!!!!!");
            ResetImages();
        }
        private void startGame(object sender, EventArgs e)
        {
            allowClick = true;
            setRandomImages();
            HideImages();
            startGameTimer();
            clickTimer.Interval = 1000;
            clickTimer.Tick += CLICKTIMER_TICK;
            button1.Enabled = false;
        }
        private void button2_Click(object sender, EventArgs e)
        {
            Main f4 = new Main();
            f4.Show();
            this.Hide();
        }
        private void superHero_FormClosed(object sender, FormClosedEventArgs e)
        {
            Application.Exit();
        }
    }
}
*/
